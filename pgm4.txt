import matplotlib.pyplot as plt
import seaborn; seaborn.set() # Use TÃ…Agg backend
import pandas as pd
import numpy as np
from matplotlib import style
style.use('ggplot')
from sklearn.decomposition import PCA
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler

# Load the Iris dataset
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)

# Standardize the features (important for PCA)
# scaler = StandardScaler()
# scaled_df = scaler.fit_transform(df)

scaled_df = (df - np.mean(df, axis=0)) / np.std(df, axis=0)

# Apply PCA to reduce to 2 dimensions
pca = PCA(n_components=2)
result = pca.fit_transform(scaled_df)

# Create a DataFrame for the 2 principal components
df_pca = pd.DataFrame(result, columns=['PC1', 'PC2'])

# Visualize the result
plt.figure(figsize=(8, 6))
plt.scatter(df_pca['PC1'], df_pca['PC2'], c=iris.target, cmap='viridis')
plt.title('PCA of IRIS Dataset (2 components)')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.colorbar(label='Target')
plt.show()